# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net
name: .NET CI

on:
  push:
    branches: [ "development" ]
    paths-ignore: # Ignora cambios que no afectan al build
      - '**.md'
      - '**.txt'
      - '.gitignore'
  pull_request:
    branches: [ "development" ]

env:
  # Versión específica para consistencia
  DOTNET_VERSION: '6.0.408'

  # Desactiva telemetría
  DOTNET_CLI_TELEMETRY_OPTOUT: 1

  #Ruta de paquetes nuget
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest # Más rápido y económico que Windows

    steps:

      # Analizar el codigo
      - name: Checkout code
        uses: actions/checkout@v4

      #Instalar el sdk de .net
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      # Restaurar las Depenencias del proyecto
      - name: Restore dependencies
        run: dotnet restore --verbosity minimal

        # Construir la solucion

     # Construir la solucion
      - name: Build solution
        run: dotnet build --configuration Release --no-restore --verbosity minimal

      # Correr los test
      - name: Run tests with coverage
        run: |
          dotnet test \
            --configuration Release \
            --no-build \
            --verbosity normal \
            --logger "trx;LogFileName=test-results.trx" \
            --collect:"XPlat Code Coverage" \
            --settings coverlet.runsettings



